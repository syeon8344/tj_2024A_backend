[기능 구현]
1. 등록 시
    1. 제품코드, 제품명, 제품가격을 입력받아 저장
    2. 총 제품 갯수 > 저장가능 갯수 : 저장 불가 안내
2. 출력 시
    1. 현재 저장된 제품들의 속성을 모두 출력
    2. 없는 제품은 출력하지 않는다
3. 수정 시
    1. 제품코드 입력 받고 존재하면 수정, 아니면 수정불가
    2. 일치시 제품명과 제품가격 입력받아서 수정
4. 삭제 시
    1. 제품코드 입력받고 일치하면 삭제 아니면 삭제불가


[메모리 설계]
    - 최대 제품 3개
    - 속성 : 제품코드, 제품명, 제품가격
    - 설계 조건
        1. 배열 X, 2. 클래스/객체 X


1. 제품CRUD_변수버전
    - 속성 1개당 변수 1개, 제품 3개 및 속성 3개 : 변수 9개
    - 제품 수가 많아지면 유지보수가 힘들고 실행도중에 변수 추가가 불가능하다

2. 제품CRUD_배열버전
    - 제품의 속성별로 배열을 분류했다
    - 속성이 많아지면 유지보수가 어려워진다

*. 제품CRUD_문자열 버전
    - 모든 제품들의 속성을 하나의 타입으로 묶어서 하나의 배열에 저장
    String[] 제품목록 = new String[1] {"A-1","콜라",1000\n"A-2","사이다",1200\n"A-3"...} : CSV (Comma-Separated Variable) 형식, 속성 구분은 ',' 제품 구분은 \n

3. 제품CRUD_객체버전
    - 제품들의 속성들을 하나의 타입으로 묶어서(클래스) 하나의 타입(객체)에 저장
    - 객체지향 형식 : , 구분이 아닌 클래스의 멤버변수로 속성 구성
    - 객체 여러개를 하나의 배열에 저장 (객체 타입 배열)

4. 제품CRUD_함수 활용 객체와 배열 버전

* 순서도/알고리즘
복잡해지면 그려보기.
e.g. 동사무소 주민등록 VS 제품등록
